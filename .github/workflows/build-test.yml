name: "Run Tests"

on:
  workflow_dispatch:
  pull_request:

jobs:

  run-tests:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

      # Setup Maven and JDK
    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Folder content debug
      run: ls -l

    - name: Run basic tests
      run: mvn test

    - name: Runs the database and application
      run: |
        docker build . -t projeto-fiap-produto
        cd ./src/test/resources/deploy
        ls -l
        sed -i 's/DB_PASSWORD_PLACEHOLDER/${{ secrets.PROJETOFIAP_DB_PASSWORD }}/g' docker-compose.yml
        docker-compose up -d

    - name: Wait for Container to be Live and Monitor Containers
      run: |
        timeout=300
        elapsed=0
        echo "Waiting for container to be live..."
        while ! curl --head --fail http://localhost:8080/produto/liveness; do
          if [ $elapsed -ge $timeout ]; then
            echo "Timed out waiting for container to be live."
            exit 1
          fi
          printf '.'
        
          # Print the current status of Docker containers
          echo "======================================================"
          echo "Current time: $(date)"
          docker ps
          echo "======================================================"
          docker logs --tail 50 $(docker ps --filter name=db -q)
          docker logs --tail 50 $(docker ps --filter name=projeto-fiap-produto -q)
          echo "======================================================"
        
          sleep 10
          elapsed=$((elapsed + 10))
        done
        echo "Container is live!"

    - name: Run BDD tests
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: mvn clean verify sonar:sonar -P bdd

    - name: Check for coverage report existence
      run: |
        ls -l target/site/jacoco/jacoco.xml

    - name: Check for BDD tests failures
      run: |
        if grep -q '<error message=' target/surefire-reports/*.xml; then
          echo "Falha nos testes BDD"
          exit 1
        fi
